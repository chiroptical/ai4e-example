openapi: 3.0.1
info:
  title: 500 Bird Detector
  description: API is set up to generate spectrograms 
  contact:
    email: kitzeslab@gmail.com
  version: 0.4.4
servers:
- url: https://.../v1/birds
tags:
- name: health_check
  description: Ensure API is functioning
- name: detect_cardinalis_cardinalis
  description: Run predictions on audio input with various models
- name: spectrogram
  description: Generate spectrogram images from audio input
paths:
  /:
    get:
      tags:
      - health_check
      summary: Check the API is functioning
      description: Run a health check against the API. The result will be an empty
        JSON response
      operationId: healthCheck
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheck"
  /detect/cardinalis_cardinalis:
    post:
      tags:
      - detect_cardinalis_cardinalis
      summary: Make prediction on audio for cardinalis-cardinalis
      operationId: predictCardinalisCardinalis
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: JSON document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Detection"
                  - $ref: "#/components/schemas/Error"
      x-codegen-request-body-name: body
  /detect/haemorhous_mexicanus:
    post:
      tags:
      - detect_haemorhous_mexicanus
      summary: Make prediction on audio for haemorhous-mexicanus
      operationId: predictHaemorhousMexicanus
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: JSON document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Detection"
                  - $ref: "#/components/schemas/Error"
  /detect/melospiza_melodia:
    post:
      tags:
      - detect_melospiza_melodia
      summary: Make prediction on audio for melospiza_melodia
      operationId: predictMelospizaMelodia
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: JSON document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Detection"
                  - $ref: "#/components/schemas/Error"
  /detect/thryothorus_ludovicianus:
    post:
      tags:
      - detect_thryothorus_ludovicianus
      summary: Make prediction on audio for thryothorus-ludovicianus
      operationId: predictThryothorusLudovicianus
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: JSON document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Detection"
                  - $ref: "#/components/schemas/Error"
  /detect/turdus_migratorius:
    post:
      tags:
      - detect_turdus_migratorius
      summary: Make prediction on audio for turdus_migratorius
      operationId: predictTurdusMigratorius
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: JSON document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Detection"
                  - $ref: "#/components/schemas/Error"
  /detect/zenaida_macroura:
    post:
      tags:
      - detect_zenaida_macroura
      summary: Make prediction on audio for zenaida-macroura
      operationId: predictZenaidaMacroura
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: JSON document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Detection"
                  - $ref: "#/components/schemas/Error"
      x-codegen-request-body-name: body 
  /spectrogram:
    post:
      tags:
      - spectrogram
      summary: Return a spectrogram for a given audio file
      operationId: generateSpectrogram
      requestBody:
        description: A wav file greater >= 5 s and <= 20 s
        content:
          audio/vnd.wav:
            schema:
              type: string
              format: bytes
        required: true
      responses:
        200:
          description: An array of spectrograms
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Spectrogram"
                  - $ref: "#/components/schemas/Error"
      x-codegen-request-body-name: body

components:
  schemas:
    HealthCheck:
      type: object
      properties:
        {}
    Detection:
      type: object
      properties:
        predictions:
          description: An array of softmax scores for [not detected, detected] for each five second segment
          type: array
          items:
            type: array
            items:
              type: number
              minItems: 2
              maxItems: 2
    Spectrogram:
      type: object
      properties:
        spectrogram:
          type: array
          description: An array of images for each five second segment
          items:
            type: array
            minItems: 224
            maxItems: 224
            items:
              type: array
              minItems: 224
              maxItems: 224
              items:
                type: array
                minItems: 3
                maxItems: 3
                items:
                  type: integer
                  minimum: 0
                  maximum: 255
    Error:
      type: object
      properties:
        error:
          description: A description of the error
          type: string